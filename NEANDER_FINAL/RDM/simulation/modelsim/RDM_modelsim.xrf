vendor_name = ModelSim
source_file = 1, Registrador8bits.vhd
source_file = 1, C:/Users/thaty/Desktop/ProjetoCircuitosDigitais/NEANDER/RDM/flipFlopJK.vhd
source_file = 1, C:/Users/thaty/Desktop/ProjetoCircuitosDigitais/NEANDER/RDM/teste_RDM.vwf
source_file = 1, teste_RDMFINAL.vwf
source_file = 1, teste_load.vwf
source_file = 1, teste_loadcomoclock.vwf
source_file = 1, teste_loadcomoclock2.vwf
source_file = 1, multiplexador.vhd
source_file = 1, teste_RDMmux.vwf
source_file = 1, C:/Users/thaty/Desktop/ProjetoCircuitosDigitais/NEANDER/RDM/RegRDM.vhd
source_file = 1, C:/Users/thaty/Desktop/ProjetoCircuitosDigitais/NEANDER/RDM/multiplexador2.vhd
source_file = 1, C:/Users/thaty/Desktop/ProjetoCircuitosDigitais/NEANDER/RDM/db/RDM.cbx.xml
source_file = 1, c:/altera/13.0/quartus/libraries/vhdl/ieee/prmtvs_b.vhd
source_file = 1, c:/altera/13.0/quartus/libraries/vhdl/ieee/prmtvs_p.vhd
source_file = 1, c:/altera/13.0/quartus/libraries/vhdl/ieee/timing_b.vhd
source_file = 1, c:/altera/13.0/quartus/libraries/vhdl/ieee/timing_p.vhd
design_name = RegRDM
instance = comp, \input_Mem[0]~I\, input_Mem[0], RegRDM, 1
instance = comp, \input_AC[1]~I\, input_AC[1], RegRDM, 1
instance = comp, \input_AC[2]~I\, input_AC[2], RegRDM, 1
instance = comp, \input_AC[3]~I\, input_AC[3], RegRDM, 1
instance = comp, \input_Mem[4]~I\, input_Mem[4], RegRDM, 1
instance = comp, \input_Mem[5]~I\, input_Mem[5], RegRDM, 1
instance = comp, \input_AC[6]~I\, input_AC[6], RegRDM, 1
instance = comp, \input_Mem[7]~I\, input_Mem[7], RegRDM, 1
instance = comp, \clk~I\, clk, RegRDM, 1
instance = comp, \clk~clkctrl\, clk~clkctrl, RegRDM, 1
instance = comp, \input_AC[0]~I\, input_AC[0], RegRDM, 1
instance = comp, \load[0]~I\, load[0], RegRDM, 1
instance = comp, \load[1]~I\, load[1], RegRDM, 1
instance = comp, \Muxentrada|Mux7~0\, Muxentrada|Mux7~0, RegRDM, 1
instance = comp, \RFOR:0:FFN|qsignal\, \RFOR:0:FFN|qsignal, RegRDM, 1
instance = comp, \input_Mem[1]~I\, input_Mem[1], RegRDM, 1
instance = comp, \Muxentrada|Mux6~0\, Muxentrada|Mux6~0, RegRDM, 1
instance = comp, \RFOR:1:FFN|qsignal\, \RFOR:1:FFN|qsignal, RegRDM, 1
instance = comp, \input_Mem[2]~I\, input_Mem[2], RegRDM, 1
instance = comp, \Muxentrada|Mux5~0\, Muxentrada|Mux5~0, RegRDM, 1
instance = comp, \RFOR:2:FFN|qsignal\, \RFOR:2:FFN|qsignal, RegRDM, 1
instance = comp, \input_Mem[3]~I\, input_Mem[3], RegRDM, 1
instance = comp, \Muxentrada|Mux4~0\, Muxentrada|Mux4~0, RegRDM, 1
instance = comp, \RFOR:3:FFN|qsignal\, \RFOR:3:FFN|qsignal, RegRDM, 1
instance = comp, \input_AC[4]~I\, input_AC[4], RegRDM, 1
instance = comp, \Muxentrada|Mux3~0\, Muxentrada|Mux3~0, RegRDM, 1
instance = comp, \RFOR:4:FFN|qsignal\, \RFOR:4:FFN|qsignal, RegRDM, 1
instance = comp, \input_AC[5]~I\, input_AC[5], RegRDM, 1
instance = comp, \Muxentrada|Mux2~0\, Muxentrada|Mux2~0, RegRDM, 1
instance = comp, \RFOR:5:FFN|qsignal\, \RFOR:5:FFN|qsignal, RegRDM, 1
instance = comp, \input_Mem[6]~I\, input_Mem[6], RegRDM, 1
instance = comp, \Muxentrada|Mux1~0\, Muxentrada|Mux1~0, RegRDM, 1
instance = comp, \RFOR:6:FFN|qsignal\, \RFOR:6:FFN|qsignal, RegRDM, 1
instance = comp, \input_AC[7]~I\, input_AC[7], RegRDM, 1
instance = comp, \Muxentrada|Mux0~0\, Muxentrada|Mux0~0, RegRDM, 1
instance = comp, \RFOR:7:FFN|qsignal\, \RFOR:7:FFN|qsignal, RegRDM, 1
instance = comp, \clear~I\, clear, RegRDM, 1
instance = comp, \preset~I\, preset, RegRDM, 1
instance = comp, \endereco_out[0]~I\, endereco_out[0], RegRDM, 1
instance = comp, \endereco_out[1]~I\, endereco_out[1], RegRDM, 1
instance = comp, \endereco_out[2]~I\, endereco_out[2], RegRDM, 1
instance = comp, \endereco_out[3]~I\, endereco_out[3], RegRDM, 1
instance = comp, \endereco_out[4]~I\, endereco_out[4], RegRDM, 1
instance = comp, \endereco_out[5]~I\, endereco_out[5], RegRDM, 1
instance = comp, \endereco_out[6]~I\, endereco_out[6], RegRDM, 1
instance = comp, \endereco_out[7]~I\, endereco_out[7], RegRDM, 1
